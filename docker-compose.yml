services:
  postgres_db:
    image: postgres:16.4-bullseye
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 60s
      retries: 5
    env_file:
      - ./.env
    restart: always
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: python3 manage.py runserver
    depends_on:
      postgres_db:
        condition: service_healthy
    ports:
      - 8000:8000
    networks:
      - internal_network
    restart: always
    env_file:
      - ./.env
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: frontend/Dockerfile
  #   command: npm start
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - internal_network
  #   restart: always

networks:
  internal_network:
volumes:
  postgres:
    name: db_data